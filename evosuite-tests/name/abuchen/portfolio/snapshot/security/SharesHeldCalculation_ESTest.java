/*
 * This file was automatically generated by EvoSuite
 * Mon May 25 19:37:15 GMT 2020
 */

package name.abuchen.portfolio.snapshot.security;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.LocalDateTime;
import name.abuchen.portfolio.model.PortfolioTransaction;
import name.abuchen.portfolio.model.Security;
import name.abuchen.portfolio.money.CurrencyConverter;
import name.abuchen.portfolio.snapshot.security.DividendInitialTransaction;
import name.abuchen.portfolio.snapshot.security.SharesHeldCalculation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SharesHeldCalculation_ESTest extends SharesHeldCalculation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SharesHeldCalculation sharesHeldCalculation0 = new SharesHeldCalculation();
      PortfolioTransaction portfolioTransaction0 = new PortfolioTransaction();
      // Undeclared exception!
      try { 
        sharesHeldCalculation0.visit((CurrencyConverter) null, portfolioTransaction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("name.abuchen.portfolio.snapshot.security.SharesHeldCalculation", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SharesHeldCalculation sharesHeldCalculation0 = new SharesHeldCalculation();
      PortfolioTransaction.Type portfolioTransaction_Type0 = PortfolioTransaction.Type.DELIVERY_OUTBOUND;
      PortfolioTransaction portfolioTransaction0 = new PortfolioTransaction((LocalDateTime) null, "%,.4f", (-3358), (Security) null, (-571L), portfolioTransaction_Type0, (-571L), (-1L));
      sharesHeldCalculation0.visit((CurrencyConverter) null, portfolioTransaction0);
      long long0 = sharesHeldCalculation0.getSharesHeld();
      assertEquals(571L, long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SharesHeldCalculation sharesHeldCalculation0 = new SharesHeldCalculation();
      PortfolioTransaction.Type portfolioTransaction_Type0 = PortfolioTransaction.Type.DELIVERY_INBOUND;
      PortfolioTransaction portfolioTransaction0 = new PortfolioTransaction((LocalDateTime) null, "avfm\"BEnXAnda2sbm_", (-1L), (Security) null, (-1L), portfolioTransaction_Type0, (-3358), 2099L);
      sharesHeldCalculation0.visit((CurrencyConverter) null, portfolioTransaction0);
      assertEquals((-1L), sharesHeldCalculation0.getSharesHeld());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SharesHeldCalculation sharesHeldCalculation0 = new SharesHeldCalculation();
      PortfolioTransaction.Type portfolioTransaction_Type0 = PortfolioTransaction.Type.TRANSFER_OUT;
      PortfolioTransaction portfolioTransaction0 = new PortfolioTransaction((LocalDateTime) null, "avfm\"BEnXAnda2sbm_", (-3369), (Security) null, (-3369), portfolioTransaction_Type0, (-3369), (-3369));
      sharesHeldCalculation0.visit((CurrencyConverter) null, portfolioTransaction0);
      assertEquals(PortfolioTransaction.Type.TRANSFER_OUT, portfolioTransaction0.getType());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SharesHeldCalculation sharesHeldCalculation0 = new SharesHeldCalculation();
      PortfolioTransaction.Type portfolioTransaction_Type0 = PortfolioTransaction.Type.SELL;
      PortfolioTransaction portfolioTransaction0 = new PortfolioTransaction((LocalDateTime) null, "avfmBEXAndae2sb_", (-1L), (Security) null, (-1L), portfolioTransaction_Type0, (-3390), 2077L);
      sharesHeldCalculation0.visit((CurrencyConverter) null, portfolioTransaction0);
      assertEquals(1L, sharesHeldCalculation0.getSharesHeld());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SharesHeldCalculation sharesHeldCalculation0 = new SharesHeldCalculation();
      PortfolioTransaction.Type portfolioTransaction_Type0 = PortfolioTransaction.Type.TRANSFER_IN;
      PortfolioTransaction portfolioTransaction0 = new PortfolioTransaction((LocalDateTime) null, "avfmBEXAndae2sb_", (-1L), (Security) null, (-1L), portfolioTransaction_Type0, (-3390), 2077L);
      sharesHeldCalculation0.visit((CurrencyConverter) null, portfolioTransaction0);
      assertEquals("avfmBEXAndae2sb_", portfolioTransaction0.getCurrencyCode());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SharesHeldCalculation sharesHeldCalculation0 = new SharesHeldCalculation();
      Security security0 = new Security("auiB<JCn,l4MV#.yt", "name.abuchen.portfolio.snapshot.security.SharesHeldCalculation", "name.abuchen.portfolio.snapshot.security.SharesHeldCalculation", "auiB<JCn,l4MV#.yt");
      PortfolioTransaction.Type portfolioTransaction_Type0 = PortfolioTransaction.Type.BUY;
      PortfolioTransaction portfolioTransaction0 = new PortfolioTransaction((LocalDateTime) null, "auiB<JCn,l4MV#.yt", (-3390), security0, (-3390), portfolioTransaction_Type0, (-3390), (-3390));
      sharesHeldCalculation0.visit((CurrencyConverter) null, portfolioTransaction0);
      long long0 = sharesHeldCalculation0.getSharesHeld();
      assertEquals((-3390L), long0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SharesHeldCalculation sharesHeldCalculation0 = new SharesHeldCalculation();
      long long0 = sharesHeldCalculation0.getSharesHeld();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SharesHeldCalculation sharesHeldCalculation0 = new SharesHeldCalculation();
      // Undeclared exception!
      try { 
        sharesHeldCalculation0.visit((CurrencyConverter) null, (DividendInitialTransaction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("name.abuchen.portfolio.snapshot.security.SharesHeldCalculation", e);
      }
  }
}
