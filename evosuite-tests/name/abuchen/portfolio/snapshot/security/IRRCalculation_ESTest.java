/*
 * This file was automatically generated by EvoSuite
 * Mon May 25 19:32:40 GMT 2020
 */

package name.abuchen.portfolio.snapshot.security;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.LocalDateTime;
import name.abuchen.portfolio.model.AccountTransaction;
import name.abuchen.portfolio.model.PortfolioTransaction;
import name.abuchen.portfolio.model.Security;
import name.abuchen.portfolio.money.CurrencyConverter;
import name.abuchen.portfolio.snapshot.security.DividendFinalTransaction;
import name.abuchen.portfolio.snapshot.security.DividendInitialTransaction;
import name.abuchen.portfolio.snapshot.security.DividendTransaction;
import name.abuchen.portfolio.snapshot.security.IRRCalculation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IRRCalculation_ESTest extends IRRCalculation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IRRCalculation iRRCalculation0 = new IRRCalculation();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Security security0 = new Security((String) null, "");
      AccountTransaction.Type accountTransaction_Type0 = AccountTransaction.Type.DIVIDENDS;
      AccountTransaction accountTransaction0 = new AccountTransaction(localDateTime0, (String) null, (-2439L), security0, accountTransaction_Type0);
      DividendTransaction dividendTransaction0 = DividendTransaction.from(accountTransaction0);
      // Undeclared exception!
      try { 
        iRRCalculation0.visit((CurrencyConverter) null, dividendTransaction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("name.abuchen.portfolio.model.Transaction", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IRRCalculation iRRCalculation0 = new IRRCalculation();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      PortfolioTransaction.Type portfolioTransaction_Type0 = PortfolioTransaction.Type.DELIVERY_INBOUND;
      PortfolioTransaction portfolioTransaction0 = new PortfolioTransaction(localDateTime0, "http://www.fondsweb.de/{isin}", 0L, (Security) null, (-2024L), portfolioTransaction_Type0, (-2024L), (-2024L));
      // Undeclared exception!
      try { 
        iRRCalculation0.visit((CurrencyConverter) null, portfolioTransaction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("name.abuchen.portfolio.model.Transaction", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IRRCalculation iRRCalculation0 = new IRRCalculation();
      double double0 = iRRCalculation0.getIRR();
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IRRCalculation iRRCalculation0 = new IRRCalculation();
      AccountTransaction accountTransaction0 = new AccountTransaction();
      AccountTransaction.Type accountTransaction_Type0 = AccountTransaction.Type.BUY;
      accountTransaction0.setType(accountTransaction_Type0);
      iRRCalculation0.visit((CurrencyConverter) null, accountTransaction0);
      assertEquals(AccountTransaction.Type.BUY, accountTransaction0.getType());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IRRCalculation iRRCalculation0 = new IRRCalculation();
      AccountTransaction accountTransaction0 = new AccountTransaction();
      AccountTransaction.Type accountTransaction_Type0 = AccountTransaction.Type.TAX_REFUND;
      accountTransaction0.setType(accountTransaction_Type0);
      iRRCalculation0.visit((CurrencyConverter) null, accountTransaction0);
      assertEquals(0L, accountTransaction0.getAmount());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IRRCalculation iRRCalculation0 = new IRRCalculation();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Security security0 = new Security((String) null, (String) null);
      AccountTransaction.Type accountTransaction_Type0 = AccountTransaction.Type.TAXES;
      AccountTransaction accountTransaction0 = new AccountTransaction(localDateTime0, "", (-3439L), security0, accountTransaction_Type0);
      iRRCalculation0.visit((CurrencyConverter) null, accountTransaction0);
      assertNull(accountTransaction0.getNote());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IRRCalculation iRRCalculation0 = new IRRCalculation();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Security security0 = new Security((String) null, (String) null);
      AccountTransaction.Type accountTransaction_Type0 = AccountTransaction.Type.FEES_REFUND;
      AccountTransaction accountTransaction0 = new AccountTransaction(localDateTime0, (String) null, (-3439L), security0, accountTransaction_Type0);
      // Undeclared exception!
      try { 
        iRRCalculation0.visit((CurrencyConverter) null, accountTransaction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      IRRCalculation iRRCalculation0 = new IRRCalculation();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Security security0 = new Security((String) null, (String) null);
      AccountTransaction.Type accountTransaction_Type0 = AccountTransaction.Type.FEES;
      AccountTransaction accountTransaction0 = new AccountTransaction(localDateTime0, (String) null, 16L, security0, accountTransaction_Type0);
      // Undeclared exception!
      try { 
        iRRCalculation0.visit((CurrencyConverter) null, accountTransaction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      IRRCalculation iRRCalculation0 = new IRRCalculation();
      // Undeclared exception!
      try { 
        iRRCalculation0.visit((CurrencyConverter) null, (DividendFinalTransaction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("name.abuchen.portfolio.snapshot.security.IRRCalculation", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      IRRCalculation iRRCalculation0 = new IRRCalculation();
      // Undeclared exception!
      try { 
        iRRCalculation0.visit((CurrencyConverter) null, (DividendInitialTransaction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("name.abuchen.portfolio.snapshot.security.IRRCalculation", e);
      }
  }
}
