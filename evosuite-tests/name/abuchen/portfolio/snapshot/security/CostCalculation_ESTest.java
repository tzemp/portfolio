/*
 * This file was automatically generated by EvoSuite
 * Mon May 25 19:38:31 GMT 2020
 */

package name.abuchen.portfolio.snapshot.security;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZoneOffset;
import name.abuchen.portfolio.model.AccountTransaction;
import name.abuchen.portfolio.model.PortfolioTransaction;
import name.abuchen.portfolio.model.Security;
import name.abuchen.portfolio.money.CurrencyConverter;
import name.abuchen.portfolio.money.Money;
import name.abuchen.portfolio.snapshot.security.CostCalculation;
import name.abuchen.portfolio.snapshot.security.DividendInitialTransaction;
import name.abuchen.portfolio.snapshot.security.DividendTransaction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CostCalculation_ESTest extends CostCalculation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CostCalculation costCalculation0 = new CostCalculation();
      costCalculation0.setTermCurrency("event.");
      Money money0 = costCalculation0.getTaxes();
      assertEquals(0L, money0.getAmount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CostCalculation costCalculation0 = new CostCalculation();
      costCalculation0.setTermCurrency("name.abuchen.portfolio.snapshot.security.CostCalculation$LineItem");
      Money money0 = costCalculation0.getNetMovingAverageCost();
      assertTrue(money0.isZero());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CostCalculation costCalculation0 = new CostCalculation();
      costCalculation0.setTermCurrency("name.abuchen.portfolio.snapshot.security.CostCalculation$LineItem");
      Money money0 = costCalculation0.getNetFifoCost();
      assertTrue(money0.isZero());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CostCalculation costCalculation0 = new CostCalculation();
      costCalculation0.setTermCurrency("");
      Money money0 = costCalculation0.getMovingAverageCost();
      assertTrue(money0.isZero());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CostCalculation costCalculation0 = new CostCalculation();
      costCalculation0.setTermCurrency("event.");
      Money money0 = costCalculation0.getFifoCost();
      assertEquals(0L, money0.getAmount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CostCalculation costCalculation0 = new CostCalculation();
      costCalculation0.setTermCurrency("name.abuchen.portfolio.snapshot.security.CostCalculation$LineItem");
      Money money0 = costCalculation0.getFees();
      assertFalse(money0.isPositive());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CostCalculation costCalculation0 = new CostCalculation();
      PortfolioTransaction portfolioTransaction0 = new PortfolioTransaction();
      // Undeclared exception!
      try { 
        costCalculation0.visit((CurrencyConverter) null, portfolioTransaction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("name.abuchen.portfolio.model.Transaction", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CostCalculation costCalculation0 = new CostCalculation();
      // Undeclared exception!
      try { 
        costCalculation0.getNetFifoCost();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CostCalculation costCalculation0 = new CostCalculation();
      // Undeclared exception!
      try { 
        costCalculation0.getFifoCost();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CostCalculation costCalculation0 = new CostCalculation();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Security security0 = new Security();
      AccountTransaction.Type accountTransaction_Type0 = AccountTransaction.Type.TAX_REFUND;
      AccountTransaction accountTransaction0 = new AccountTransaction(localDateTime0, "ZRo", 0L, security0, accountTransaction_Type0);
      // Undeclared exception!
      try { 
        costCalculation0.visit((CurrencyConverter) null, accountTransaction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("name.abuchen.portfolio.snapshot.security.CostCalculation", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CostCalculation costCalculation0 = new CostCalculation();
      Security security0 = new Security();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      AccountTransaction.Type accountTransaction_Type0 = AccountTransaction.Type.TAXES;
      AccountTransaction accountTransaction0 = new AccountTransaction(localDateTime0, "SIw~@K2h&", 0L, security0, accountTransaction_Type0);
      // Undeclared exception!
      try { 
        costCalculation0.visit((CurrencyConverter) null, accountTransaction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("name.abuchen.portfolio.snapshot.security.CostCalculation", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CostCalculation costCalculation0 = new CostCalculation();
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      LocalDateTime localDateTime0 = MockLocalDateTime.now((ZoneId) zoneOffset0);
      Security security0 = new Security(".symbol", ".symbol", ".symbol", ".symbol");
      AccountTransaction.Type accountTransaction_Type0 = AccountTransaction.Type.FEES_REFUND;
      AccountTransaction accountTransaction0 = new AccountTransaction(localDateTime0, ".symbol", 0L, security0, accountTransaction_Type0);
      // Undeclared exception!
      try { 
        costCalculation0.visit((CurrencyConverter) null, accountTransaction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("name.abuchen.portfolio.snapshot.security.CostCalculation", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CostCalculation costCalculation0 = new CostCalculation();
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDateTime localDateTime0 = MockLocalDateTime.now((ZoneId) zoneOffset0);
      AccountTransaction.Type accountTransaction_Type0 = AccountTransaction.Type.INTEREST_CHARGE;
      AccountTransaction accountTransaction0 = new AccountTransaction(localDateTime0, " B", 0L, (Security) null, accountTransaction_Type0);
      costCalculation0.visit((CurrencyConverter) null, accountTransaction0);
      assertEquals(0L, accountTransaction0.getShares());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CostCalculation costCalculation0 = new CostCalculation();
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      LocalDateTime localDateTime0 = MockLocalDateTime.now((ZoneId) zoneOffset0);
      AccountTransaction.Type accountTransaction_Type0 = AccountTransaction.Type.FEES;
      AccountTransaction accountTransaction0 = new AccountTransaction(localDateTime0, "", 0L, (Security) null, accountTransaction_Type0);
      // Undeclared exception!
      try { 
        costCalculation0.visit((CurrencyConverter) null, accountTransaction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("name.abuchen.portfolio.snapshot.security.CostCalculation", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CostCalculation costCalculation0 = new CostCalculation();
      // Undeclared exception!
      try { 
        costCalculation0.getFees();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CostCalculation costCalculation0 = new CostCalculation();
      // Undeclared exception!
      try { 
        costCalculation0.getMovingAverageCost();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CostCalculation costCalculation0 = new CostCalculation();
      DividendTransaction dividendTransaction0 = new DividendTransaction();
      // Undeclared exception!
      try { 
        costCalculation0.visit((CurrencyConverter) null, dividendTransaction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("name.abuchen.portfolio.model.Transaction", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CostCalculation costCalculation0 = new CostCalculation();
      // Undeclared exception!
      try { 
        costCalculation0.visit((CurrencyConverter) null, (DividendInitialTransaction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("name.abuchen.portfolio.snapshot.security.CostCalculation", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CostCalculation costCalculation0 = new CostCalculation();
      // Undeclared exception!
      try { 
        costCalculation0.getTaxes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CostCalculation costCalculation0 = new CostCalculation();
      // Undeclared exception!
      try { 
        costCalculation0.getNetMovingAverageCost();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }
}
