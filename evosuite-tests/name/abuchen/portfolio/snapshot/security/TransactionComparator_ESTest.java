/*
 * This file was automatically generated by EvoSuite
 * Mon May 25 19:47:51 GMT 2020
 */

package name.abuchen.portfolio.snapshot.security;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZoneOffset;
import name.abuchen.portfolio.model.AccountTransaction;
import name.abuchen.portfolio.model.PortfolioTransaction;
import name.abuchen.portfolio.model.Security;
import name.abuchen.portfolio.model.Transaction;
import name.abuchen.portfolio.snapshot.security.TransactionComparator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TransactionComparator_ESTest extends TransactionComparator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TransactionComparator transactionComparator0 = new TransactionComparator();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      AccountTransaction.Type accountTransaction_Type0 = AccountTransaction.Type.FEES;
      AccountTransaction accountTransaction0 = new AccountTransaction(localDateTime0, "oMBt\u0002~ vm@.oS", 6L, (Security) null, accountTransaction_Type0);
      PortfolioTransaction.Type portfolioTransaction_Type0 = PortfolioTransaction.Type.SELL;
      System.setCurrentTimeMillis((-192L));
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      LocalDateTime localDateTime1 = MockLocalDateTime.now((ZoneId) zoneOffset0);
      PortfolioTransaction portfolioTransaction0 = new PortfolioTransaction(localDateTime1, "oMBt\u0002~ vm@.oS", (-636L), (Security) null, (-731L), portfolioTransaction_Type0, 0, (-1072L));
      int int0 = transactionComparator0.compare((Transaction) accountTransaction0, (Transaction) portfolioTransaction0);
      assertEquals(45, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TransactionComparator transactionComparator0 = new TransactionComparator();
      AccountTransaction accountTransaction0 = new AccountTransaction();
      // Undeclared exception!
      try { 
        transactionComparator0.compare((Transaction) accountTransaction0, (Transaction) accountTransaction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("name.abuchen.portfolio.snapshot.security.TransactionComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TransactionComparator transactionComparator0 = new TransactionComparator();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      AccountTransaction.Type accountTransaction_Type0 = AccountTransaction.Type.FEES;
      AccountTransaction accountTransaction0 = new AccountTransaction(localDateTime0, "oMBt\u0002~ vm@.oS", 6L, (Security) null, accountTransaction_Type0);
      PortfolioTransaction.Type portfolioTransaction_Type0 = PortfolioTransaction.Type.SELL;
      PortfolioTransaction portfolioTransaction0 = new PortfolioTransaction(localDateTime0, "oMBt\u0002~ vm@.oS", 0, (Security) null, 0, portfolioTransaction_Type0, 0, 6L);
      int int0 = transactionComparator0.compare((Transaction) accountTransaction0, (Transaction) portfolioTransaction0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TransactionComparator transactionComparator0 = new TransactionComparator();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Security security0 = new Security("u", "u", "u", "u");
      PortfolioTransaction.Type portfolioTransaction_Type0 = PortfolioTransaction.Type.DELIVERY_INBOUND;
      PortfolioTransaction portfolioTransaction0 = new PortfolioTransaction(localDateTime0, "u", 0L, security0, 0L, portfolioTransaction_Type0, 0L, 0L);
      int int0 = transactionComparator0.compare((Transaction) portfolioTransaction0, (Transaction) portfolioTransaction0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TransactionComparator transactionComparator0 = new TransactionComparator();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      AccountTransaction.Type accountTransaction_Type0 = AccountTransaction.Type.DIVIDENDS;
      AccountTransaction accountTransaction0 = new AccountTransaction(localDateTime0, "8oMBt\u0002~ vm@.>4S", (-1L), (Security) null, accountTransaction_Type0);
      PortfolioTransaction.Type portfolioTransaction_Type0 = PortfolioTransaction.Type.BUY;
      PortfolioTransaction portfolioTransaction0 = new PortfolioTransaction(localDateTime0, "8oMBt\u0002~ vm@.>4S", 0, (Security) null, 0, portfolioTransaction_Type0, 0, (-1L));
      int int0 = transactionComparator0.compare((Transaction) portfolioTransaction0, (Transaction) accountTransaction0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TransactionComparator transactionComparator0 = new TransactionComparator();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      AccountTransaction.Type accountTransaction_Type0 = AccountTransaction.Type.DIVIDENDS;
      AccountTransaction accountTransaction0 = new AccountTransaction(localDateTime0, "8oMB\u0002~ vm@.>4S", (-1L), (Security) null, accountTransaction_Type0);
      PortfolioTransaction.Type portfolioTransaction_Type0 = PortfolioTransaction.Type.TRANSFER_IN;
      PortfolioTransaction portfolioTransaction0 = new PortfolioTransaction(localDateTime0, "8oMB\u0002~ vm@.>4S", 0, (Security) null, 0, portfolioTransaction_Type0, 0, 0);
      int int0 = transactionComparator0.compare((Transaction) accountTransaction0, (Transaction) portfolioTransaction0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TransactionComparator transactionComparator0 = new TransactionComparator();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      PortfolioTransaction.Type portfolioTransaction_Type0 = PortfolioTransaction.Type.SELL;
      PortfolioTransaction portfolioTransaction0 = new PortfolioTransaction(localDateTime0, "oMBt\u0002~ vm@.oS", 0, (Security) null, 0, portfolioTransaction_Type0, 0, 6L);
      System.setCurrentTimeMillis((-192L));
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      LocalDateTime localDateTime1 = MockLocalDateTime.now((ZoneId) zoneOffset0);
      PortfolioTransaction portfolioTransaction1 = new PortfolioTransaction(localDateTime1, "oMBt\u0002~ vm@.oS", (-636L), (Security) null, (-731L), portfolioTransaction_Type0, 0, (-1072L));
      int int0 = transactionComparator0.compare((Transaction) portfolioTransaction1, (Transaction) portfolioTransaction0);
      assertEquals((-45), int0);
  }
}
